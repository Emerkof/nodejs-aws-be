service: import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev

  environment:
    SQS_PRODUCT_QUEUE: ${cf:product-service-${self:provider.stage}.SQSProductQueueUrl}

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
        - 's3:PutObject'
        - 's3:DeleteObject'
      Resource:
        - 'arn:aws:s3:::${env:S3_IMPORT_BUCKET}/*'
    - Effect: 'Allow'
      Action:
        - 'sqs:SendMessage'
      Resource:
        - ${cf:product-service-${self:provider.stage}.SQSProductQueueArn}

plugins:
  - serverless-plugin-webpack
  - serverless-dotenv-plugin

custom:
  webpack:
    config: ../webpack.config.js

functions:
  importProductsFile:
    handler: handlers/import-products-file.getImportProductSignedUrl
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            arn: ${cf:authorization-service-${self:provider.stage}.BasicAuthorizerLambdaFunctionQualifiedArn}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handlers/import-file-parser.parseProductsFile
    events:
      - s3:
          bucket: ${env:S3_IMPORT_BUCKET}
          event: 's3:ObjectCreated:*'
          rules:
            - prefix: 'uploaded/'
          existing: true

